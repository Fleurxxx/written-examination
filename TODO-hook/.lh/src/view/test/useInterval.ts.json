{
    "sourceFile": "src/view/test/useInterval.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1715797626608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1715797626608,
            "name": "Commit-0",
            "content": "import { ref, onMounted, onBeforeUnmount } from 'vue';\r\n\r\nfunction useInterval(fn, delay, immediate = false) {\r\n  const intervalId = ref(null);\r\n  const isPaused = ref(false);\r\n\r\n  const start = () => {\r\n    if (immediate) {\r\n      fn();\r\n    }\r\n    intervalId.value = setInterval(() => {\r\n      if (!isPaused.value) {\r\n        fn();\r\n      }\r\n    }, delay);\r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(intervalId.value);\r\n    intervalId.value = null;\r\n  };\r\n\r\n  const pause = () => {\r\n    isPaused.value = true;\r\n  };\r\n\r\n  const resume = () => {\r\n    isPaused.value = false;\r\n  };\r\n\r\n  onMounted(() => {\r\n    if (intervalId.value === null) {\r\n      start();\r\n    }\r\n  });\r\n\r\n  onBeforeUnmount(() => {\r\n    stop();\r\n  });\r\n\r\n  return { start, stop, pause, resume };\r\n}\r\n\r\nexport default useInterval;\r\n"
        }
    ]
}